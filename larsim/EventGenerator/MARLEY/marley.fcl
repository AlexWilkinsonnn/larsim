BEGIN_PROLOG

# No experiment specific configurations because MARLEY is detector agnostic

standard_marley:
{
  module_type: "MARLEYGen"

  # Sample primary vertex locations uniformly over
  # all active TPC volumes.
  vertex: 
  {
    type: "sampled"
    # Seed for selecting a primary vertex location
    #seed: 54321
  }

  # Use a fixed primary vertex location
  #vertex: {
  #  type: "fixed"
  #  (x, y, z) coordinates to use
  #  position: [ 0., 0., 0. ]
  #}

  ## Sample vertex locations uniformly within
  ## a box. One can also optionally enforce that
  ## each sampled point within the box lies within
  ## the active volume of a TPC.
  #vertex: {
  #  type: "box"
  #  # The corner of the box corresponding to the minimum allowed x, y, and z
  #  # values
  #  min_position: [ 0.0, 0.0, 0.0 ]
  #  # The corner of the box corresponding to the maximum allowed x, y, and z
  #  # values
  #  max_position: [ 5.0, 5.0, 5.0 ]
  #  # Whether to enforce that the sampled vertices are within a TPC active
  #  # volume
  #  check_active: true
  #  # Seed for selecting primary vertex locations
  #  #seed: 54321
  #}


  # FHiCL parameters that will be used to configure the
  # marley::Generator object.
  marley_parameters: 
  {
    # Seed for the MARLEY generator (handled
    # automatically by NuRandomService unless it
    # is given explicitly here)
    #seed: 12345

    # Incident neutrino direction 3-vector [ x, y, z ]
    direction: {
      x: 0.0
      y: 0.0
      z: 1.0
    }

    # The user must define at least one reaction
    # by passing MARLEY the name of a matrix element
    # data file. Three are currently available
    # for the reaction ve + 40Ar --> e- + 40K*.
    reactions: [ "ve40ArCC_Bhattacharya2009.react" ]
    #reactions: [ "ve40ArCC_Bhattacharya1998.react" ]
    #reactions: [ "ve40ArCC_Liu1998.react" ]

    # Examples of all currently-allowed MARLEY neutrino
    # sources are given below. Only one of these FHiCL tables
    # should be left uncommented at a time.
    source: 
    {
      type: "fermi-dirac"
      neutrino: "ve"
      Emin: 0. # MeV
      Emax: 60. # MeV
      temperature: 3.5 # MeV
      eta: 0. # optional
    }
    #source: 
    #{ 
    #  type: "monoenergetic"
    #  # May be either a string or a PDG code. Note that
    #  # for the current reactions, only ve is allowed.
    #  neutrino: "ve"
    #  energy: 10. # MeV
    #}
    #source: 
    #{
    #  type: "decay-at-rest"
    #  neutrino: "ve"
    #}
    #source: 
    #{
    #  type: "beta-fit"
    #  neutrino: "ve"
    #  Emin: 0. # MeV
    #  Emax: 60. # MeV
    #  Emean: 10. # MeV
    #  beta: 0. # optional
    #}
    #source: 
    #{
    #  type: "histogram"
    #  neutrino: "ve"
    #  E_bin_lefts: [ 1., 2., 3. ] # MeV
    #  weights: [ 0.1, 1, 8 ] # bin probabilities
    #  Emax: 4. # MeV
    #}
    #source: 
    #{
    #  type: "grid"
    #  neutrino: "ve"
    #  rule: "linlin"
    #  energies: [ 1., 2., 3. ] # MeV
    #  prob_densities: [ 0.1, 0.5, 0.1 ] # prob. density
    #}
    #source: 
    #{
    #  type: "th1"
    #  neutrino: "ve"
    #  tfile: "myhist.root"
    #  namecycle: "sourcehist"
    #}
    #source: 
    #{
    #  type: "tgraph"
    #  neutrino: "ve"
    #  tfile: "mygraph.root"
    #  namecycle: "sourcegraph"
    #}
  }
}

# Monoenergetic neutrinos
standard_marley_monoenergetic: @local::standard_marley
standard_marley_monoenergetic.marley_parameters.source:
{ 
  type: "monoenergetic"
  neutrino: "ve"
  energy: 10. # MeV
}

# Use the Livermore nu_e spectrum
standard_marley_nue_spectrum: @local::standard_marley
standard_marley_nue_spectrum.marley_parameters.source:
{
  type:      "tgraph"
  neutrino:  "ve"
  tfile:     "nue_spectrum.root"
  namecycle: "NueSpectrum"
}
standard_marley_livermore: @local::standard_marley_nue_spectrum

# Toy Fermi-Dirac model for supernova cooling spectrum
standard_marley_fermi_dirac: @local::standard_marley

END_PROLOG
