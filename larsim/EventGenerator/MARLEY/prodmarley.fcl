# Generates events in the DUNE 10kt workspace geometry (4 APAs)

#include "services_dune.fcl"
#include "largeantmodules_dune.fcl"
#include "detsimmodules_dune.fcl"
#include "caldata_dune.fcl"

process_name: MarleyGen

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "marley_hist.root" }
  TimeTracker:  {}
  RandomNumberGenerator: {} #ART native random number generator
  user:         @local::dunefd_simulation_services
}


#Start each new event with an empty event.
source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:  100         # Number of events to create
  firstRun:   1           # Run number to use for this file
  firstEvent: 1           # Number of first event in the file
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   # Generate events using MARLEY
   generator: { module_type: "MARLEYGen"

                # Sample primary vertex locations uniformly over
                # all active TPC volumes.
                vertex: {
                  type: "sampled"
                  # Seed for selecting a primary vertex location
                  #seed: 54321
                }

                # Use a fixed primary vertex location
                #vertex: {
                #  type: "fixed"
                #  x: 0.
                #  y: 0.
                #  z: 0.
                #}

                # FHiCL parameters that will be used to configure the
                # marley::Generator object.
                marley_parameters: {

                  # Seed for the MARLEY generator (handled
                  # automatically by LArSeedService unless it
                  # is given explicitly here)
                  #seed: 12345

                  # Incident neutrino direction 3-vector
                  direction: {
                    x: 0.
                    y: 0.
                    z: 1.
                  }

                  # The user must define at least one reaction
                  # by passing MARLEY the name of a matrix element
                  # data file. Two are currently available, both
                  # for the reaction ve + 40Ar --> e- + 40K*.
                  # The 2009 version uses an (n,p) scattering
                  # measurement for the experimental matrix elements,
                  # while the 1998 version uses a 40Ti beta decay
                  # measurement.
                  reactions: [ "ve40ArCC_2009.react" ]
                  #reactions: [ "ve40ArCC_1998.react" ]

                  # Nuclear structure (discrete levels and gamma-ray
                  # branching ratios) data files in the TALYS format
                  # may be specified here. The recommended data
                  # files are z019, z018, and z017 from TALYS-1.6,
                  # which are included with MARLEY v0.9.5.
                  structure: [ "z019", "z018", "z017" ]

                  # Examples of all currently-allowed MARLEY neutrino
                  # sources are given below. Only one of these FHiCL tables
                  # should be left uncommented at a time.
                  source: { 
                            type: "monoenergetic"
                            # May be either a string or a PDG code. Note that
                            # for the current reactions, only ve is allowed.
                            neutrino: "ve"
                            energy: 10. # MeV
                          }
                  #source: {
                  #          type: "decay-at-rest"
                  #          neutrino: 12
                  #        }
                  #source: {
                  #          type: "fermi-dirac"
                  #          neutrino: "ve"
                  #          Emin: 0. # MeV
                  #          Emax: 60. # MeV
                  #          temperature: 3.5 # MeV
                  #          eta: 0. # optional
                  #        }
                  #source: {
                  #          type: "beta-fit"
                  #          neutrino: "ve"
                  #          Emin: 0. # MeV
                  #          Emax: 60. # MeV
                  #          Emean: 10. # MeV
                  #          beta: 0. # optional
                  #        }
                  #source: {
                  #          type: "histogram"
                  #          neutrino: "ve"
                  #          E_bin_lefts: [ 1., 2., 3. ] # MeV
                  #          weights: [ 0.1, 1, 8 ] # bin probabilities
                  #          Emax: 4. # MeV
                  #        }
                  #source: {
                  #          type: "grid"
                  #          neutrino: "ve"
                  #          rule: "linlin"
                  #          energies: [ 1., 2., 3. ] # MeV
                  #          prob_densities: [ 0.1, 0.5, 0.1 ] # prob. density
                  #        }
                  #source: {
                  #          type: "th1"
                  #          neutrino: "ve"
                  #          tfile: "myhist.root"
                  #          namecycle: "sourcehist"
                  #        }
                  #source: {
                  #          type: "tgraph"
                  #          neutrino: "ve"
                  #          tfile: "mygraph.root"
                  #          namecycle: "sourcegraph"
                  #        }
                }
              }
   # Track particles in the detector using Geant4
   largeant:  @local::dunefd_largeant
   # Simulate TPC wire responses
   daq:       @local::dunefd_simwire       
   # Convert raw::RawDigit objects to recob:wire objects
   caldata:   @local::dunefd_calwire
   # Use cheated reconstruction to produce recob:Hit objects
   #hitcheat:  @local::dunefd_hitcheater
   # Save the state of the LArSoft random number generators
   rns:       { module_type: "RandomNumberSaver" }
 }

 # define the producer and filter modules for this path, order matters, filters
 # reject all following items.  see lines starting physics.producers below
 simulate: [ generator, largeant, daq, caldata, rns ]
 
 # define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 # trigger_paths is a keyword and contains the paths that modify the
 # art::event, ie filters and producers
 trigger_paths: [simulate]

 # end_paths is a keyword and contains the paths that do not modify the
 # art::Event, ie analyzers and output streams.  these all run simultaneousy
 end_paths:     [stream1]
}

# block to define where the output goes.  if you defined a filter in the
# physics block and put it in the trigger_paths then you need to put a
# SelectEvents: {SelectEvents: [XXX]} entry in the output stream you want those
# to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   # default file name, can override from command line with -o or --output
   fileName:    "marley_gen.root"
 }
}

# Make sure that the geometry is what we think it is
services.user.Geometry: @local::dune10kt_workspace_geo

# Adjustments to the standard LArG4 parameters
services.user.LArG4Parameters.UseCustomPhysics: true
# Use NeutronHP data (very important for neutrino-induced neutron emission!)
# which is not enabled by default in LArSoft.
services.user.LArG4Parameters.EnabledPhysics:
  [ "LowEnergyEm",
    "SynchrotronAndGN", "Ion", "NeutronHP", "Decay", "HadronElastic",
    "Stopping" ]
services.user.LArG4Parameters.ParticleKineticEnergyCut: 0.01e-3 # GeV
services.user.LArG4Parameters.StoreTrajectories: true
services.user.LArG4Parameters.KeepEMShowerDaughters: true
services.user.LArG4Parameters.ISCalculator: "NEST"
